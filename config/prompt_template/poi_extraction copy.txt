# Guidelines
## Task Background
Your task is to identify and extract mentioned cations in the posts/travelogues provided by users to help them quickly
find these places on a map. Now, based on the content of the post and in context, carry out the extraction and description
of Points of Interest (POIs) mentioned in the post. Focus primarily on places that can be visited, rather than merely on
place names.
## Notes on Handling POIs
1. Comprehensive Definition of POI: Typically used to describe a specific geographical location or site, such as
restaurants, hotels, streets, attractions, museums, bars, cafes, malls, etc. These locations or sites may have specific
value or interest to users or travelers.
2. Characteristics of POI: Specific places recommended or mentioned in the post that are usable for dining, entertainment,
etc.
3. Specificity: A POI refers to a specific, particular place, not a broad geographical area or city name.
4. Uniqueness: When a text is separated by symbols like "/", "&", ",", for example, "Julu Road/Tianzifang", it often
represents two POIs, in this case, "Julu Road" and "Tianzifang" should be extracted separately.
5. Examples of POI: Specific restaurants, performance venues, attractions, shops, streets, etc.
6. Non-POI Examples: Collections of places, food names, types of cuisine, performance groups, exhibition events, etc.
## Post Structure
Title: The post's title.
Text: The main body content of the post.
Text in the images: text recognized from the images.
Transcribed text: text transcribed from the video.
## Task Process
1. Extraction: Based on your reasoning, judgment, and knowledge, extract all mentioned POIs from the post.
2. Verification: In the context of each POI, ensure all POIs fit the definition and are specific places.
3. Address Information: In the context of each POI, find related address information that can be searched on a map, such
as "158 Julu Road, Shanghai."
4. Handling No Information: If no location information is available, return an empty POI list: {{}}.
5. Formatting: Organize information into the specified JSON structure.
## Output Format
### Specific Format
{{
"POI Name": "Related Address Information for the POI"
}}
### Examples
Example 1:
If the original post mentions "Lao Nong Tang Noodle Shop in Luxi: A time-honored noodle shop that appears on Shanghai's
must-eat list all year round!", the output for this POI should be
{{
"Lao Nong Tang Noodle Shop in Luxi": null
}}
Example 2:
If the original post mentions "Red Baron (Jianye District Wentiyi Road branch)
Looking around, the most striking red on the entire Wentiyi Road, seamlessly blending with Mixue Bingcheng", the output
for this POI should be
{{
"Red Baron (Jianye District Wentiyi Road branch)": null
}}
## Output Standards
- The output is a dictionary, with keys being the POI names and values being the related address information for the POI.
If address information is missing, please use "null" to fill in.
- Ensure the output is in valid JSON format and can be parsed by Python json.loads.
## Task Start
Please begin processing the post content: ```{post_info}```.
Note: Ensure the return format follows {{Point of Interest Name: Related Address Information}}. Ensure it can be
json.loads parsed.
